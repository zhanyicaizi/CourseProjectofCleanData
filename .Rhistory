print(datout)
}
complete <- function(directory, id = 1:332,...) {
files_list<-list.files(directory,full.names=TRUE)
datout<-data.frame(id,nobs)  ## output dataframes
for (i in id){
dat<-read.csv(files_list[i]) ## read No.i
good<-complete.cases(dat)
dat_sub<-dat[good,]
x<-nrow(dat_sub)
datout[i,"id"]<-i
datout[i,"nobs"]<-x
}
print(datout)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files_list<-list.files(directory,full.names=TRUE)
datout<-data.frame(id,nobs)  ## output dataframes
for (i in id){
dat<-read.csv(files_list[i]) ## read No.i
good<-complete.cases(dat)
dat_sub<-dat[good,]
x<-nrow(dat_sub)
datout[i,"id"]<-i
datout[i,"nobs"]<-x
}
print(datout)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files_list<-list.files(directory,full.names=TRUE)
datout<-data.frame(id,nobs)  ## output dataframes
dat_subset<-data.frame
for (i in id){
dat<-read.csv(files_list[i]) ## read No.i
good<-complete.cases(dat)
dat_subset<-dat[good,]
x<-nrow(dat_sub)
datout[i,"id"]<-i
datout[i,"nobs"]<-x
}
print(datout)
}
install.package("XLConnect vignette")
install.packages("XLConnect vignette")
?read.xlsx
library(XLConnect)
?read.xlsx
??read.xlsx
??read
library(swirl)
swirl()
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url,destfile="q1.csv",metho="curl")
setwd("~/")
q1<-read.table("q1.csv",sep=",",header=TRUE)
q<q1$VAL
q<-q1$VAL
sort(q,decreasing=TRUE,na.list=TRUE)
sort(q,decreasing=TRUE,is.na=TRUE)
?sort
sort(q,decreasing=TRUE,na.last=TRUE)
swirl()
read.csv(path2csv,stringAsFactors=FALSE)
read.csv(path2csv,stringsAsFactors=FALSE)
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(X:size)
select(-(X:size))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison(that's an uppercase C)
)
?Comparison(C)
'
?Comparison(C)
?Comparison
?Comparison(cran,IN<=3.0.2)
filter(cran,IN<=3.0.2)
filiter(cran,IN<="3.0.2")
filter(cran,IN<="3.0.2")
filter(cran,country="IN",r_version<=3.0.2)
filter(cran,country="IN",r_version<="3.0.2")
filter(cran,country=="IN",r_version<="3.0.2")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500|r_os=="linux-gnu")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^10)
mutate(cran3,size_gb=size/2^20/2^10)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
install.packages("graphics")
install.packages("graphics")
install.packages("grDevices")
install.packages("grDevices")
install.packages("lattice")
install.packages("grid")
install.packages("ggplot2")
par(plot)
par(pch)
?pch
library("swirl")
swirl()
library(tidyr)
student
students
?gather
gater(students,sex,count)
gather(students,sex,count)
gather(students,sex,count,-grade)
students2
res<-gather(students,male_1,count)
res<-gather(students,sex_class,count)
res<-gather(students,sex_class,count,-grade)
res<-gather(students,male_1,count,male_2,count,female_1,count,female_2,count,-grade)
res<-gather(students2,male_1,count,male_2,count,female_1,count,female_2,count,-grade)
res<-gather(students,male_1,male_2,female_1,female_2,count,-grade)
res<-gather(students2,male_1,male_2,female_1,female_2,count,-grade)
res<-gather(students,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separete
?separate()
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
skip()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-passed %>%mutate(status="passed")
failed<-failed%>%mutate(status="failed")
packageVersion("dplyr")
bind_rows(passed,failed)
dataset
sat
?select
submit()
submit()
install.packages("RMMySQL")
install.packages("RMySQL")
library("RMySQL")
install.packages("DBI")
install.packages("DBI")
library("DBI")
library("RMySQL")
install.packages("lattice")
library("lattice")
install.packages("XLConnect vignette")
install.packages("ggplot2")
library("ggplot2")
install.packages("XLConnect vignette")
library("XLConnect")
?read.xlsx
?read.xslx
setRepositories()
install.packages("XLConnect vignette")
setRepositories()
install.packages("XLConnect vignette")
library("RMySQL")
library("DBI")
library("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
result<-dbGetQuery(ucscDb,"show databases;")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;")
dbDisconnect(ucscDb)
result
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19,"affyU133Plus2")
head(affyData)
query<-dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
library("swirl")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
25081985
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
update(this_moment,now())
update(this_moment,hours=10,minutes=16,seconds=0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart <- update(depart,hours=17,minutes=34)
depart
nyc+days(2)
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,Asia/Hong_kong)
arrive<-with_tz(arrive,"Asia/Hong_kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17,2008",tz="Singapore")
last_time<-mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
new_interval(last_time,arrive)
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
install.packages("httr")
install.packages("httr")
install("grid")
install.packages("grid")
install.packages("grid")
library(XML)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.pacakges("grid")
install.packages("grid")
setRepositories()
install.packages("grid")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
install.packages("grid")
library(nlme)
?print.trellis
?splom
?trellis.par.set
?par
library(datasets)
library(airquality)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library("httr")
?myapp
?oauth_app
QuizGit<-oauth_app("Github",key="608d8173cb23180a1869",secret="8913c7658e8b831b2eeee41d2231a90537ff4904")
QuizGit
oauth_endpoints("Github")
oauth_endpoints("github")
QuizGit<-oauth_app("github",key="608d8173cb23180a1869",secret="8913c7658e8b831b2eeee41d2231a90537ff4904")
github_token<-oauth2.0_token(oauth_endpoints("github"),QuizGit)
homeTL=GET("https://api.github.com/users/jtleek/repos",sig)
homeTL=GET("https://api.github.com/users/jtleek/repos")
j=content(homeTL)
j2=jsonlite::fromJSON(toJSON(j))
j
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
library("httr")
json2=jsonlite::fromJSON(toJSON(json1))
gtoken<-fonfig(token=githu_token)
gtoken<-config(token=githu_token)
github_token<-oauth2.0_token(oauth_endpoints("github"),QuizGit)
gtoken<-config(token=github_token)
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp<-oauth_app("github",key="608d8173cb23180a1869",secret="8913c7658e8b831b2eeee41d2231a90537ff4904")
github_token<-oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken<-config(token=github_token)
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
sig=sign_oauth1.0(myapp,token=github_token,token_secret="8913c7658e8b831b2eeee41d2231a90537ff4904")
homeTL=GET("https://api.github.com/users/jtleek/repos",sig)
library(plyr)
?plyr
setwd("~/Rprogram/coursedata/CourseProjectofCleanData")
## load dplyr packages
library(dplyr)
## Merge training and test into data1
## read train data and combine into training
X_train<-read.table("UCI HAR Dataset/train/X_train.txt")
Y_train<-read.table("UCI HAR Dataset/train/y_train.txt")
subject_train<-read.table("UCI HAR Dataset/train/subject_train.txt")
subject_train_rename<-rename(subject_train,Trainsubject=V1)
Y_train_rename<-rename(Y_train,Trainactivity=V1)
training<-cbind(subject_train_rename,Y_train_rename,X_train)
X_test<-read.table("UCI HAR Dataset/test/X_test.txt")
Y_test<-read.table("UCI HAR Dataset/test/y_test.txt")
subject_test<-read.table("UCI HAR Dataset/test/subject_test.txt")
subject_test_rename<-rename(subject_test,Testsubject=V1)
Y_test_rename<-rename(Y_test,Testactivity=V1)
test<-cbind(subject_test_rename,Y_test_rename,X_test)
data1<-inner_join(training,test,by=c("Trainactivity"="Testactivity"))
dataex<-select(data1,Trainsubject,Trainactivity,
V1.x:V6.x, V41.x:V46.x, V81.x:V86.x,V121.x:V126.x,
V161.x:V166.x,V201.x:V202.x, V215.x:V214.x,V227.x:V228.x,
V240.x:V241.x,V253.x:V254.x,V266.x:V271.x,V345.x:V350.x,
V424.x:V429.x,V503.x:V504.x,V516.x:V517.x,V529.x:V530.x,
V542.x:V543.x,
V1.y:V6.y, V41.y:V46.y, V81.y:V86.y,V121.y:V126.y,
V161.y:V166.y,V201.y:V202.y, V215.y:V214.y,V227.y:V228.y,
V240.y:V241.y,V253.y:V254.y,V266.y:V271.y,V345.y:V350.y,
V424.y:V429.y,V503.y:V504.y,V516.y:V517.y,V529.y:V530.y,
V542.y:V543.y
)
data_recode<-dataex
data_recode$Trainactivity<-as.factor(data_recode$Trainactivity)
levels(data_recode$Trainactivity)<-c("WALKING",
"WALKING_UPSTAIRS",
"WALKING_DOWNSTAIRS",
"SITTING",
"STANDING",
"LAYING")
data_renamed<-rename(data_recode,
TraintBodyAccMeanX=V1.x,TraintBodyAccMeanY=V2.x,TraintBodyAccMeanZ=V3.x,
TraintBodyAccStdX=V4.x,TraintBodyAccStdY=V5.x,TraintBodyAccStdZ=V6.x,
TraintGravAccMeanX=V41.x,TraintGravAccMeanY=V42.x,TraintGravAccMeanZ=V43.x,
TraintGravAccStdX=V44.x,TraintGravAccStdY=V45.x,TraintGravAccStdZ=V46.x,
TraintBodyACCJMeanX=V81.x,TraintBodyACCJMeanY=V82.x,TraintBodyACCJMeanZ=V83.x,
TraintBodyACCJStdX=V84.x,TraintBodyACCJStdY=V85.x,TraintBodyACCJStdZ=V86.x,
TraintBodyGyroMeanX=V121.x,TraintBodyGyroMeanY=V122.x,TraintBodyGyroMeanZ=V123.x,
TraintBodyGyroStdX=V124.x,TraintBodyGyroStdY=V125.x,TraintBodyGyroStdZ=V126.x,
TraintBodyGyroJMeanX=V161.x,TraintBodyGyroJMeanY=V162.x,TraintBodyGyroJMeanZ=V163.x,
TraintBodyGyroJStdX=V164.x,TraintBodyGyroJStdY=V165.x,TraintBodyGyroJStdZ=V166.x,
TraintBodyAccMMean=V201.x,TraintBodyAccMStd=V202.x,
TraintGravAccMMean=V214.x,TraintGravAccMStd=V215.x,
TraintBodyAccJMMean=V227.x,TraintBodyAccJMStd=V228.x,
TraintBodyGyroMMean=V240.x,TraintBodyGyroMStd=V241.x,
TraintBodyGyroJMMean=V253.x,TraintBodyGyroJMStd=V254.x,
TrainfBodyAccMeanX=V266.x,TrainfBodyAccMeaY=V267.x, TrainfBodyAccMeaZ=V268.x,
TrainfBodyAccStdX=V269.x,TrainfBodyAccStdY=V270.x,TrainfBodyAccStdZ=V271.x,
TrainfBodyAccJMeanX=V345.x,TrainfBodyAccJMeanY=V346.x,TrainfBodyAccJMeanZ=V347.x,
TrainfBodyAccJStdX=V348.x,TrainfBodyAccJStdY=V349.x,TrainfBodyAccJStdZ=V350.x,
TrainfBodyGryroMeanX=V424.x,TrainfBodyGryroMeanY=V425.x,TrainfBodyGryroMeanZ=V426.x,
TrainfBodyGryroStdX=V427.x,TrainfBodyGryroStdY=V428.x,TrainfBodyGryroStdZ=V429.x,
TrainfBodyAccMMean=V503.x,TrainfBodyAccMStd=V504.x,
TrainfBody2AccJMMean=V516.x,TrainfBody2AccJMStd=V517.x,
TrainfBody2GyroMMean=V529.x,TrainfBody2GyroMStd=V530.x,
TrainfBody2GyroJMMean=V542.x,TrainfBody2GyroJMStd=V543.x,
TesttBodyAccMeanX=V1.y,TesttBodyAccMeanY=V2.y,TesttBodyAccMeanZ=V3.y,
TesttBodyAccStdX=V4.y,TesttBodyAccStdY=V5.y,TesttBodyAccStdZ=V6.y,
TesttGravAccMeanX=V41.y,TesttGravAccMeanY=V42.y,TesttGravAccMeanZ=V43.y,
TesttGravAccStdX=V44.y,TesttGravAccStdY=V45.y,TesttGravAccStdZ=V46.y,
TesttBodyACCJMeanX=V81.y,TesttBodyACCJMeanY=V82.y,TesttBodyACCJMeanZ=V83.y,
TesttBodyACCJStdX=V84.y,TesttBodyACCJStdY=V85.y,TesttBodyACCJStdZ=V86.y,
TesttBodyGyroMeanX=V121.y,TesttBodyGyroMeanY=V122.y,TesttBodyGyroMeanZ=V123.y,
TesttBodyGyroStdX=V124.y,TesttBodyGyroStdY=V125.y,TesttBodyGyroStdZ=V126.y,
TesttBodyGyroJMeanX=V161.y,TesttBodyGyroJMeanY=V162.y,TesttBodyGyroJMeanZ=V163.y,
TesttBodyGyroJStdX=V164.y,TesttBodyGyroJStdY=V165.y,TesttBodyGyroJStdZ=V166.y,
TesttBodyAccMMean=V201.y,TesttBodyAccMStd=V202.y,
TesttGravAccMMean=V214.y,TesttGravAccMStd=V215.y,
TesttBodyAccJMMean=V227.y,TesttBodyAccJMStd=V228.y,
TesttBodyGyroMMean=V240.y,TesttBodyGyroMStd=V241.y,
TesttBodyGyroJMMean=V253.y,TesttBodyGyroJMStd=V254.y,
TestfBodyAccMeanX=V266.y,TestfBodyAccMeaY=V267.y, TestfBodyAccMeaZ=V268.y,
TestfBodyAccStdX=V269.y,TestfBodyAccStdY=V270.y,TestfBodyAccStdZ=V271.y,
TestfBodyAccJMeanX=V345.y,TestfBodyAccJMeanY=V346.y,TestfBodyAccJMeanZ=V347.y,
TestfBodyAccJStdX=V348.y,TestfBodyAccJStdY=V349.y,TestfBodyAccJStdZ=V350.y,
TestfBodyGryroMeanX=V424.y,TestfBodyGryroMeanY=V425.y,TestfBodyGryroMeanZ=V426.y,
TestfBodyGryroStdX=V427.y,TestfBodyGryroStdY=V428.y,TestfBodyGryroStdZ=V429.y,
TestfBodyAccMMean=V503.y,TestfBodyAccMStd=V504.y,
TestfBody2AccJMMean=V516.y,TestfBody2AccJMStd=V517.y,
TestfBody2GyroMMean=V529.y,TestfBody2GyroMStd=V530.y,
TestfBody2GyroJMMean=V542.y,TestfBody2GyroJMStd=V543.y
)
remove(Y_train_rename)
remove(Y_train)
remove(Y_test_rename)
remove(Y_test)
remove(X_train)
remove(X_test)
remove(training)
remove(test)
data_renamed2<-rename(data_renamed,subject=Trainsubject,activity=Trainactivity)
remove(data_recode)
remove(subject_test)
remove(subject_test_rename)
remove(subject_train)
remove(subject_train_rename)
activitymean<-aggregate(data_renamed2,
list(activitymean=data_renamed2[,"activity"]),
mean)
subjectmean<-aggregate(data_renamed2,
list(subjectean=data_renamed2[,"subject"]),
mean)
data2<-rbind(activitymean,subjectmean)
names(subjectmean)
subjectmean<-rename(subjectmean,A/SMean=subjectean)
subjectmean<-rename(subjectmean,"A/SMean"="subjectean")
subjectmean<-rename(subjectmean,ASMean =subjectean)
names(subjectmean)
names(activitymean)
activitymean<-rename(activitymean,ASMean =activitymean)
data2<-rbind(activitymean,subjectmean)
data3<-select(data2,-(subject:activity))
write.table(data3,file="tidydata.txt",row.name=FALSE)
View(data3)
subjectmean$ASMean<-as.factor(subjectmean$ASMean)
data2<-rbind(activitymean,subjectmean)
data3<-select(data2,-(subject:activity))
View(data3)
write.table(data3,file="tidydata.txt",row.name=FALSE)
activitymean<-rename(activitymean,AS =activitymean)
data3<-rename(data3,A/S=ASMean)
data3<-rename(data3,AorS=ASMean)
View(data3)
write.table(data3,file="tidydata.txt",row.name=FALSE)
View(data3)
names(data3)
